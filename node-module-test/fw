#!/usr/bin/env node

var fs = require('fs');
var uid = require('./uid').uid;
var Path = require('path');

var fw = new function() {
  this.write = function(name, data, overwrite){
    fs.exists(name, function(exists) {
      if (exists && !overwrite) {
        name = name + "_" + uid(4);
        console.log("File already exists. Writing to " + name + ".");
        fs.writeFile(name, data, function(err, written){
          if (err) return console.log(err);
        });
      }
      else {
        fs.writeFile(name, data, function(err, written){
          if (err) return console.log(err);
        });
      }
    });
  };

  this.create = function(name){
    name = name || (uid(16) + ".txt");
    fs.writeFile(name, "");
  };

  this.print = function(name){
    fs.readFile(name, function (err, data) {
      if (err) console.log(err);
      console.log(data.toString());
    });
  };

  this.append = function(name, data){
    fs.appendFile(name, data, function (err) {
      if (err) throw err;
      console.log('The "data to append" was appended to file!');
    });
  };

  this.find = function(filename, path){
    var _this = this;
    var path = Path.resolve(path) + "/";

    fs.readdir(path, function(err,files){
      if (err) return;

      files.forEach(function(file){
        fs.stat(path + file, function(err, stats){
          if (err) return;
          if (stats.isFile()){
            if (file === filename){
              console.log(path+file);
            }
          }
          if (stats.isDirectory()) {
            _this.find(filename, path + file + "/");
          }
        });
      });
    });
  }
}();

var func = process.argv[2];


fw[func].apply(fw, process.argv.slice(3));